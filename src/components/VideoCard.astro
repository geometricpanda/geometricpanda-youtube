---
import Text from "./Text.astro";
import Icon from './Icon.astro';
import Marked from "./Marked.astro";
import VisuallyHidden from "./VisuallyHidden.astro";

import { secondsToTime, getTagAccent } from "../utils";

const { story, video } = Astro.props;
const { tagBackground, tagColor } = getTagAccent(story.tag_list);
---

<div class:list={{"video": true, "video--featured": story.content.featured }}>

    <div class="video__head">
        <img class="video__head-img" src={video.thumbnailUrl} alt={story.name}/>
        <div class="video__head-icon">
            <Icon size="2xl" name="youtube"/>
            <span class="video__head-runtime">
                <Icon size="sm" name="clock"/>
                <Text as="span" color="inherit">
                    <VisuallyHidden>Play time:</VisuallyHidden>
                    {secondsToTime(video.duration)}
                </Text>
            </span>
        </div>
    </div>

    <div class="video__title">
        <Text size="T400">{story.name}</Text>
    </div>

    <div class="video__body">
        <Marked content={story.content.short_description}/>
    </div>

    <div class="video__foot">
        <a class="video__watch" href={story.full_slug}>
            <Icon size="sm" name="play"/>
            Watch
            <VisuallyHidden>{story.name}</VisuallyHidden>
        </a>
    </di>

</div>




<style define:vars={{ videoBackground: tagBackground }}>
.video {
    display: flex;
    flex-direction: column;
    gap: 8px;
    height: 100%;
    position: relative;
    --featured-color: var(--color-primary-default);
}

.video--featured {
    --featured-color: var(--videoBackground, var(--color-interactive-default));
}


.video__head {
    display: block;
    position: relative;
    color: var(--color-fixed-white);
    border-width: 16px 2px 2px;
    border-style: solid;
    border-color: var(--featured-color);
    background: var(--color-fixed-black);
}

.video--featured .video__head {

}

.video__head-img {
    transition-duration: var(--transition-speed-medium);
    transition-timing-function: ease-in;
    transition-property: opacity;
    opacity: 0.4;
    position: relative;
    z-index: 1;
}

.video__head-icon {
    position: absolute;
    z-index: 2;
    inset: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.video__head-runtime {
    display: flex;
    gap: 4px;

    align-items: center;
    margin-bottom: 16px;
}

.video__title {
    padding-top: 8px;
}

.video__body {
    flex-grow: 1;
}

.video__foot {
    display: flex;
    flex-direction: column;
    gap: 8px;
    padding-bottom: 16px;
    border-bottom: 2px solid var(--featured-color);
}

.video__title,
.video__body,
.video__foot {
    padding-inline: var(--container-gutter);
}

@media (min-width: 48em) {
    .video__title,
    .video__body,
    .video__foot {
        padding-inline: 0;
    }
}

.video__watch {
    background: var(--color-interactive-default);
    color: var(--color-interactive-accent);
    padding: 4px 8px 4px 4px;
    font-family: var(--type-font-family);
    font-size: var(--type-font-size-T200);
    line-height: var(--type-line-height-T200);
    font-weight: var(--type-font-weight-T200);
    text-decoration: none;
    gap: 4px;
    align-items: center;
    display: inline-flex;
    max-width: min-content;
}

.video__watch:before {
    content: '';
    display: block;
    position: absolute;
    inset: 0;
    z-index: 3;
}

.video__watch:focus:before {
    outline: var(--focus-outline);
    outline-offset: 2px;
    box-shadow: var(--focus);
}
</style>
