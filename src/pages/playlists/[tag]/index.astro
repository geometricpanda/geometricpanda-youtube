---
import { useStoryblokApi } from "@storyblok/astro";
import { titleCase } from "title-case";

import yt from "updated-youtube-info";

import Layout from "../../../layouts/Layout.astro";
import Container from "../../../components/Container.astro";
import Text from "../../../components/Text.astro";
import VideoCard from "../../../components/VideoCard.astro";

import { getTagAccent, secondsToTime, addCommasToNumbers } from "../../../utils";

export async function getStaticPaths() {
    const storyblokApi = useStoryblokApi();
    const { data } = await storyblokApi.get('cdn/tags');
    return data.tags
        .filter(({taggings_count}) => taggings_count > 0)
        .map(({name}) => ({params: {tag: name}}));
}

const { tag } = Astro.params;
const storyblokApi = useStoryblokApi();
const { data } = await storyblokApi.get('cdn/stories', {
    "with_tag": tag,
    "content_type": "video"
});

const { stories } = data;

const stories$ = stories
    .map(async (story) => {
        const youtube = await yt(story.content.video_id);
        return {
            story,
            youtube,
        }
    });

const articles = await Promise.all(stories$);

---


<Layout title={tag}>
    <Container class="title">
        <Text as="h1" size="T600" align="center">{titleCase(tag)} Playlist</h1>
    </Container>
    <Container gutterSm={false}>
        <ul class="videos">
            {articles.map(({youtube, story}) => (
            <li class="videos__item">
                <VideoCard video={youtube} story={story} tag={tag}/>
            </li>
            ))}
        </ul>
    </Container>
</Layout>

<style>
    .title {
        margin-block: 32px;
    }

    .videos {
        display: grid;
        grid-template-columns: 1fr;
        list-style: none;
        margin: 0;
        padding: 0;
    }

    @media (min-width: 48em) {
        .videos {
            column-gap: var(--container-gutter);
        }
    }

    .videos__item {
        margin: 0;
        padding: 0;
    }

    @media (min-width: 48em) {
        .videos {
            grid-template-columns: repeat(2, 1fr);
        }
    }

    @media (min-width: 64em) {
        .videos {
            grid-template-columns: repeat(3, 1fr);
        }
    }
</style>
